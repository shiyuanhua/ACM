#include<iostream>
#include<vector>
#include<cmath>
#include<algorithm>
using namespace std;

class Solution {
private:
	vector<vector<int> > result;
public:
	void sortnum(vector<int>& nums){
		sort(nums.begin(),nums.end());
	}
	vector<vector<int>> threeSum(vector<int>& nums) {
		sortnum(nums);
		vector<int> r ;
		for (int i = 0; i < nums.size()-1; i++)
		{
			if (i != 0 && nums[i] == nums[i - 1])
				continue;
			int j = i + 1, k = nums.size() - 1;
			while(j < k){
				int sum = nums[i] + nums[j] + nums[k];
				if (sum == 0)
				{
					r.push_back(nums[i]);
					r.push_back(nums[j]);
					r.push_back(nums[k]);
					result.push_back(r);
					r.clear();
					j++;
					k--;
					while (j < k&&nums[j] == nums[j + 1])
						j++;
					while (j < k&&nums[k] == nums[k - 1])
						k--;
				}
				else if (sum < 0)
				{
					j++;
				}
				else if (sum>0)
				{
					k--;
				}

			}
		}
		return result;
	}
};

int main(){
	Solution s;
	vector<int> height = {1,6,-8,3,9,2,-5};
	vector<vector<int>> v = { {} };
	v = s.threeSum(height);
	for (int i = 0; i < v.size(); i++)
	{
		for (int j = 0; j < 3; j++)
			cout << v[i][j] << "\t";
		cout << endl;
	}
	return 0;

}
